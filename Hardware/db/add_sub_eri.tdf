--lpm_add_sub CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone IV GX" LPM_PIPELINE=1 LPM_REPRESENTATION="SIGNED" LPM_WIDTH=28 USE_WYS="ON" aclr add_sub cin clken(vcc) clock dataa datab result
--VERSION_BEGIN 15.0 cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.


FUNCTION cycloneiv_lcell_comb (cin, dataa, datab, datac, datad)
WITH ( DONT_TOUCH, LUT_MASK, SUM_LUTC_INPUT)
RETURNS ( combout, cout);

--synthesis_resources = lut 28 reg 28 
SUBDESIGN add_sub_eri
( 
	aclr	:	input;
	add_sub	:	input;
	cin	:	input;
	clken	:	input;
	clock	:	input;
	dataa[27..0]	:	input;
	datab[27..0]	:	input;
	result[27..0]	:	output;
) 
VARIABLE 
	add_sub_cella[27..0] : cycloneiv_lcell_comb
		WITH (
			LUT_MASK = "96E8",
			SUM_LUTC_INPUT = "cin"
		);
	lcell_ffa[27..0] : dffe;
	const_node_clken	: NODE;

BEGIN 
	add_sub_cella[].cin = ( add_sub_cella[26..0].cout, cin);
	add_sub_cella[].dataa = dataa[];
	add_sub_cella[].datab = (datab[] $ (! add_sub));
	add_sub_cella[].datad = B"1111111111111111111111111111";
	lcell_ffa[].clk = clock;
	lcell_ffa[].clrn = (! aclr);
	lcell_ffa[].d = add_sub_cella[].combout;
	const_node_clken = clken;
	result[] = lcell_ffa[].q;
END;
--VALID FILE
